Vagrant.configure("2") do |config|
 
  # Configuration de l'OS 
  config.vm.box = "almalinux/8"

  #Configuration master kube 
  config.vm.define "master" do |master|
  master.vm.hostname = "master-node"
  master.vm.network "private_network", ip: "192.168.202.100"
  master.vm.provider "vmware_desktop" do |v|
    v.gui = true
    v.vmx["displayName"] = "MASTER-NODE"
    v.vmx["numvcpus"] = 2
    v.vmx["memsize"] = 4096
  end

# Création du user ansible 
  master.vm.provision "shell", inline: <<-SHELL
  # Création variable mot de passe crypté 
    PASSWORD=$(openssl passwd -6 P@ssw0rd1)
  # Création user avec mot de passe 
    sudo useradd -m -p "$PASSWORD" ansible
  # Ajout droits sudo + droits sudo sans mot de pase  
    sudo usermod -aG wheel ansible
    echo 'ansible  ALL=(ALL) NOPASSWD:ALL'  | sudo tee /etc/sudoers.d/ansible

  # S'assurer que la conf sshd_config permet la réception de clé 
    sudo sed -i 's/^nameserver .*/nameserver 8.8.8.8/' /etc/resolv.conf
    sudo sed -i '/^#.*PubkeyAuthentication/s/^#//' /etc/ssh/sshd_config
    sudo sed -i 's/^PasswordAuthentication.*/PasswordAuthentication yes/' /etc/ssh/sshd_config
    sudo sed -i 's/^ChallengeResponseAuthentication.*/ChallengeResponseAuthentication yes/' /etc/ssh/sshd_config
    sudo systemctl restart sshd
  SHELL
  end
  #Configuration worker kube 
  config.vm.define "worker" do |worker|
  worker.vm.hostname = "worker-node"
  worker.vm.network "private_network", ip: "192.168.202.110"
  worker.vm.provider "vmware_desktop" do |v|
    v.gui = true
    v.vmx["displayName"] = "WORKER-NODE"
    v.vmx["numvcpus"] = 2
    v.vmx["memsize"] = 4096
  end
  # Création du user ansible 
  worker.vm.provision "shell", inline: <<-SHELL
  # Création variable mot de passe crypté 
    PASSWORD=$(openssl passwd -6 P@ssw0rd1)
  # Création user avec mot de passe 
    sudo useradd -m -p "$PASSWORD" ansible
  # Ajout droits sudo + droits sudo sans mot de pase  
    sudo usermod -aG wheel ansible
    echo 'ansible  ALL=(ALL) NOPASSWD:ALL'  | sudo tee /etc/sudoers.d/ansible

  # S'assurer que la conf sshd_config permet la réception de clé  et modifier le résolveur 
    sudo sed -i 's/^nameserver .*/nameserver 8.8.8.8/' /etc/resolv.conf
    sudo sed -i '/^#.*PubkeyAuthentication/s/^#//' /etc/ssh/sshd_config
    sudo sed -i 's/^PasswordAuthentication.*/PasswordAuthentication yes/' /etc/ssh/sshd_config
    sudo sed -i 's/^ChallengeResponseAuthentication.*/ChallengeResponseAuthentication yes/' /etc/ssh/sshd_config
    sudo systemctl restart sshd
  SHELL
  end


  #Configuration serveur ansible
  config.vm.define "ansible" do |ansible|
  ansible.vm.hostname = "ansible"
  ansible.vm.network "private_network", ip: "192.168.202.20"
  ansible.vm.provider "vmware_desktop" do |v|
    v.gui = true
    v.vmx["displayName"] = "ANSIBLE"
    v.vmx["numvcpus"] = 2
    v.vmx["memsize"] = 3096
  end
  ansible.vm.provision "shell", inline: <<-SHELL
  # Modifier le resolveur 
    sudo sudo sed -i 's/^nameserver .*/nameserver 8.8.8.8/' /etc/resolv.conf
  # Création variable mot de passe crypté 
    PASSWORD=$(openssl passwd -6 P@ssw0rd1)
  # Création user avec mot de passe 
    sudo useradd -m -p "$PASSWORD" ansible
  # Ajout droits sudo + droits sudo sans mot de pase  
    sudo usermod -aG wheel ansible
    echo 'ansible  ALL=(ALL) NOPASSWD:ALL'  | sudo tee /etc/sudoers.d/ansible
  # Installer ansible 
    sudo dnf install -y epel-release
    sudo dnf install -y ansible
    sudo dnf install sshpass

  # Générer les clé ssh EN TANT QU'ANSIBLE !!!
    sudo -u ansible ssh-keygen -t rsa -N "" -f /home/ansible/.ssh/id_rsa

  # Envoyer la clé aux machines cliente ansible 
    sudo -u ansible sshpass -p "P@ssw0rd1" ssh-copy-id -o StrictHostKeyChecking=no ansible@192.168.202.100
    sudo -u ansible sshpass -p "P@ssw0rd1" ssh-copy-id -o StrictHostKeyChecking=no ansible@192.168.202.110
  SHELL
end

end



  

    
